----------CLASE 0-------------
// //VARIABLES //
// let saludo= "Hola mundo";
// let pibe= "Fabian";
// let edad= 34;
// let resultado= saludo + " " + pibe + edad + " pirulos";
// console.log(resultado);

// PARA CAPTURAR UNA ENTRADA (PONER CARTEL)//
let nombre= prompt("Ingrese su nombre");
let anios= prompt("Ingerese su edad");
console.log("El nombre que usted escribio es " + nombre + " ,y su edad es de " + anios);

// // // NUMEROS //
// // let num1= 1;
// // let num2= 1;
// // console.log(num1 + num2);

// // let numero1= prompt("Ingresa el numero A")
// // let numero2= prompt("Ingresa el numero B")
// // console.log(numero1 + numero2);

// // //BOOLEAN//
// // let VoF= true
// // console.log("tu vieja es " + VoF)

// // //VARIABLE GLOBAL: general para todo el archivo//
// // let apodo= "global"
// // console.log(apodo)

// // //VARIABLE LOCAL: //
// // if(true) {
// //     let apodo= "local"
// //     console.log(apodo)
// }

-----------CLASE 1------------
-Dentro de lHTML podes hacer JS con un scrip, pero es mejor llamar en el scrip al arcjivo JS
-Una variable es un espacio en la memoria let / var / const (contante) y pueden variar a lo largo de la ejecucion del programa
-Var me permite definir una variable 
var pirulo
pirulo= "Pedro"
El problema de var es que podes redeclararla y rompes el codigo
-El signo = es una designacion
-Las palbras entre " son string
-Con let no se puede redefinir la misma variable
-Conts nunca cambia y se escribe en mayuscula
-Los valores pueden ser number (entero o decimal) o string (entre "")
-typeof mi dice de que tipo es la variable EJ 
console.log(typeof nombredelavariable)
-Declaracion
let edad
let nombre
let apellido
-Asignacion
edad=5
nombre="carlos"
apellido="Perez"
-Inincializar VARIABLES
let edad = 5
-Ejercicio
let numeroA= 1;
let numeroB=2;
const NUMEROC= 3;
let resultadoSuma= numeroA + numeroB
let resultadoResta= numeroA - numeroB
let resultadoProducto= numeroB * NUMEROC
-Ejercicio
let textoA= "Coder"
let textoB= "House"
const BLANCO= " "
CONCATENACION
let resultadoA= textoA + textoB
let resultadoFinal= textoA + BLANCO + textoB
-Prompt es para que el usuario ingrese algo EJEMPLO
let nombreIngresado = prompt("Ingrese su nombre:")
-console.log es una llamada a la consola EJEMPLO
-alert es lo mismo pero interrumpe el flujo del interpetre
-El resultado de lo que sale en la pantalla se lo denomina SALIDA
-Ejercicio
let num1= Number (prompt ("Ingrese numero deseado"))
let num2= Number (prompt ("Ingrese numero deseado"))
let resultadoSuma= num1 + num2
console.log ("El resultado es: " = resultadoSuma)
ACTIVIADAD 1
let num1= Number (prompt ("Ingrese numero deseado"))
let num2= Number (prompt ("Ingrese numero deseado"))
let resultadoSuma= num1 + num2
console.log ("El resultado es: " + resultadoSuma)
ACTIVIDAD 2
let salario = Number(prompt("Ingrese su numero para su salario: "))
alert("Su salario es de: " + salario)
let resultado = salario * 1.3
alert("Su salario con un aumento del 30% es de:" + resultado)
ACTIVIADAD 3
let producto= Number (prompt ("Ingrese precio del producto"))
alert("El producto tiene un valor de " + producto)
let resultado = producto * 0.9
alert("Su producto con un descuento del 10% es de: " + resultado)

-------------CLASE 2------------
-Condicionales: si / entonces (if / else). Si la condicion es falsa no se ejecuta. Siempre para el igual es ==
-Boolean TRUE FALSE
-Lo que se escribe entre {} es bloque de codigo
-Conntrol de flujo: Codigo espageti (uno al lado del otro) el mas tradicional
                    Con el condicional tiene un nuevo contro lde flujo. Se abren dos posibilidades
-Comparacion: se resuelve siempre en true o false. == es el operador 
ACTIVIDAD 1
let user = "admi"
  let password = "pass"
Pedirle al usuario que ingrese usiario y contrasenia.Si es falsa, notificarlo
RESULTADO 1
let user = "admin"
let password = "pass"
let usuario= prompt ("Ingresa tu Usuario")
if (usuario == user) {
    let contrasena= prompt ("Ingresa tu Contrasena")
    if(contrasena == password) {
        alert("Bienvenido al sitio")
    }
    else {
        alert("Contrasena incorrecta. Refresque la pagina e intente otra vez.")
    }
}
else {
    alert("Usuario incorrecto. Refresque la pagina e intente otra vez.")
}
Operadores logicos:
== igual
=== estricamente igual
&& and (es como una multiplcacion)
!= disitinto
!== estricamente disitinto
<, <=, >, >= mayor, mayor igual, menor, menor igual
! no
// (dos barras pararelas) or (es como una suma)
-Cuando ponemos barra n minuscla entre "" es un salto de linea
ACTIVIDAD 2
Perdir numero y si es mayor a 1000 tirar alert
// let numero = prompt("Ingrese numero: ")
// if(numero > 1000){
//     alert("El numero es correcto")
// }
// else {
//     alert("Intente nuevamente")
// }
// ACTIVIDAD 3
// pedir texto y si es igual a hola tirar alert
let saludo = prompt("Ingrese saludo: ")
if(saludo = "hola"){
    alert("hi")
}
else {
    alert("Intente nuevamente")
}
ACTIVIADAD 4
pedir numero por promt y evaluar si esta entre 10 y 50. en caso true, mostrar alert
agregarle una condicion y si el numero es par
let numero = Number(prompt("Pone tu numero"))
if(numero >= 10 && numero <= 50){
    alert("Esta entre 10 y 50")
    if(numero % 2 == 0) {
        alert("es par")
    }
    else {
        alert("no es par")
    }
}
else {
    alert("intente otra vez")
}
Otra solucion
let numero = Number(prompt("Pone tu numero"))
if(numero >= 10 && numero <= 50 && (numero % 2) == 0){
    alert("Esta entre 10 y 50, y es par")
}
else {
    alert("intente otra vez")
}
-------CLASE 3----------
BUCLES
-CICLO POR CONTEO (FOR SE REPITE UN PAR DE VESES LO MISMO) Tiene una estructura desde hasta actualizacion
let teEncontre = false
let usuarioBuscado = ""

for (let i = 0; i < 10 && teEncontre == false; i++) {
    usuarioBuscado = prompt ("Ingrese la lista de alumnos")
    if (usuarioBuscado == "marcos") {
        teEncontre == true
        alert ("Usuario encontrado")
    }
    else{
        alert ("No es el usuario deseado")
    }
-CICLOS CONDICIONALES (WHILE...DO WHILE SI SEW CUMPLE UNA CONDICION REPITE O NO)
-i++ == a i+1
-Para interrupir se puede poner break
for (let i = 1; i<=10; i++){
    if(i == 5){
        break;
    }
    consola.log(i)
}
-Continue
for (let i = 0; i <= 10; i++) {
if ((i % 2) == 0){
    continue;
}
console.log(i)
}
-WHILE
let repetir = true;
while(repetir){
    console.log("Al infinito y mas alla")
}
-Otro ejemplo de WHILE
let entrada = prompt("Ingrese palabra clave")
while(entrada != "Salir"){
    alert ("usted ingreso: " + entrada)
    entrada = prompt ("Ingrese otra vez la plabra clave")
}
-Do WHILE
let entrada
do{
    entrada = prompt("Ingresar un dato")
    console.log("usted ingreso: " + entrada)
}
while (entrada != "ESC")
-Iterasiones = vueltas del bucle 
-SWITCH
let  numero = prompt("Ponga un numero")
switch (numero) {
    case "ja":
        console.log("Puto")
        break;
    case "je":
        console.log ("Gano")
        break;
    case "ji":
        console.log("pete")
        break;
    default:
        console.log("Dato malo")
        break;
}
------CLASE 4------
-FUNCIONES son instrucciones que se agrupan y se reutilizan. Se declara con function (aca van los parametros)
-PARAMETROS son variables que se declaran dentro de la FUNCION
EJEMPLO
function suma (num1,num2) {
    let resultado = num1+num2
    console.log("El resultado es "+resultado)
}
suma (5,10)
-Las variables creadas en una function son locales 
-Se le puede agregar la palabra return para uqe arroje el resultado directamente
EJEMPLO
function sumar(numeroUno, numeroDos) {
    return numeroUno + numeroDos
}
let resultado = sumar(5,8)
-Scope el alcance de la variable (global o local)
funciones anonimas
-funcionas flechas
-----------CLASE 5---------
OBJETO es una funcion: Agrupacion de variables bajo un mismo nombre. Siempre se necesita un constructor y un new para ejecutarlo
ejemplo
fuction Persona(nombre, edad, calle) {
    this.nombre = nombre;
    this.edad = edad;
    this.calle = calle;
}
const persona1= new Persona ("Homero", 39, "Av. Siemprevova 1234")
cosnt persona2= new Persona ("Marge", 34, "Av. Siemprevova 1234")

console.log (persona.apellido)
console.log ("Nombre: "+persona.nombre)

-this cuando se emplea una funcion constrcutura oara crear un objeto dentro de la function
-metodo no es lo mism oque funcion. El metodo son funciones uqe solo se ejecutan mediante el objeto
-ejemplo
function Persona (nombre, edad, calle) {
    this.nombre = nombre;
    this.edad = edad;
    this.calle = calle;
    this.hablar = function () {console.log ("Hola, SOY "+this.nombre)}
}

const persona1 = new Persona("Homero", 39, "Av. Siempreviva 742");
const persona2 = new Persona("Marge", 36, "Av. Siempreviva 742");
persona1.hablar();
persona2.hablar();

CLASES (class) son una equeivalencia a los constructores. Es para hacer varios objetos (pero no se le pone nombre, 
se cambia fuction nombre por constructor y se le pone parametros)
class Persona {
    cosntructor (nombre, edad, calle) {
        this.nombre = nombre;
        this.edad = edad;
        this.calle = calle;
    }
}
---
//PARA INSTANCIAR UN OBJETO
class Producto {
    constructor (nombre, precio) {
        this.nombre = nombre.toupperCase();
        this.precio = parseFloat (precio);
        this.vendido = false;
    }
    //METODO
    sumaIva() {
        this.precio = this.precio * 1.21;
    }
    vender() {
        this.vendido = true;
    }
}

//OBJETO
const producto1 = new Producto("arroz", "125");
const prodcuto2 = new Producto("pizza", "800");

//
producto1.sumaIva();
prodcuto2.sumaIva();
producto1.vender();
 ---

class Producto {
    constructor (nombre, marca, talle, precio, stock, vendido) {
        //ATRIBUTOS DEL CONSTRUCTOR
        this.nombre = nombre;
        this.marca = marca;
        this.talle = talle;
        this.precio = precio;
        this.stock = stock;
        this.vendido = false;
    }
    detalleIva() {
        return this.precio * 0.21;
    }
    precioConIva () {
        return this.precio * 1.21;

    }

    descripcion() {
        return "Producto: "+this.nombre+"Remera marca: "+this.marca+"Talle "+this.talle+"Precio: "+this.precio+"Cantidad disponible "+this.stock
    }
}

const producto1 = new Producto("remera","nike", "m",500,100)
let rta= ""

do {
    console.log("CATALOGO DE REMERAS"+producto1.descripcion())
    let cantidad = Number(prompt("Remeras a comprar. Seleccione cantidad"))
    if (cantidad <= producto1.stock && cantidad >=1){
        console.log("Gracias por su compra")
        producto1.stock = producto1.stock - cantidad;
        console.log("Stock disponible: "+producto1.stock)
    }else{
        console.log("La cantidad es mayor a nuestro stock. El mismo es de "+producto1.stock)
    }
    rta = prompt("Desea seguir comprando? Pulse cualquier letra par aseguir o \"ESC\" para salir.").toUpperCase()
}while(rta != "ESC" && producto1.stock > 0 )

if(producto1.stock==0){
    console.log("Sold out")
}else {
    console.log("On Sale")
}
-UNA CLASE ES UNA RESETA/PLANTILLA != OBJETO
-OBJETO = INSTANCIA DE UNA CLASE
-UN METODO NO ES UNA FUNCION. UN METODO TIENE LA FINALIDAD DE SER UTILZADO UNICAMENTE POR EL OBJETO INSTANCIADO
-UNA FUNCION PUEDE SER LLAMADO DESDE CUALQUIER lado
-
